{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(npm install)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "Bash(ollama pull:*)",
      "Bash(ollama run:*)",
      "Bash(npm run dev:*)",
      "Bash(export USE_LOCAL_LLM=true)",
      "Bash(export OLLAMA_MODEL=llama3.2:3b)",
      "Bash(curl:*)",
      "Bash(./test-models.sh:*)",
      "Bash(./scripts/test-jarvis.sh:*)",
      "Bash(./speak-jarvis.sh:*)",
      "Bash(npm install:*)",
      "Bash(USE_LOCAL_LLM=true OLLAMA_MODEL=llama3.2:3b npm run dev)",
      "Bash(npm uninstall:*)",
      "Bash(open http://localhost:7777)",
      "Bash(pip3 install:*)",
      "Bash(brew install:*)",
      "Bash(pipx install:*)",
      "Bash(pipx ensurepath:*)",
      "Bash(source:*)",
      "Bash(/Users/anilozsoy/.local/bin/edge-tts --list-voices)",
      "Bash(/Users/anilozsoy/.local/bin/edge-tts --voice \"en-US-AriaNeural\" --text \"Hello, I''m Jarvis, your upgraded voice assistant with natural speech!\" --write-media test_voice.wav)",
      "Bash(afplay:*)",
      "Bash(open http://localhost:7777/voice-chat.html)",
      "Bash(python3:*)",
      "Bash(./voice-jarvis.sh:*)",
      "Bash(./auto-start-jarvis.sh:*)",
      "Bash(./stop-jarvis.sh:*)",
      "Bash(npx:*)",
      "Bash(pkill:*)",
      "Bash(timeout:*)",
      "Bash(gtimeout:*)",
      "Bash(time curl:*)",
      "Bash(kill:*)",
      "Bash(say:*)",
      "Bash(open http://localhost:3000)",
      "Bash(npm ls:*)",
      "Bash(rm:*)",
      "Bash(lsof:*)",
      "Bash(sed:*)",
      "Bash(/Users/anilozsoy/.local/bin/edge-tts --text \"Test message\" --voice \"en-US-AriaNeural\" --write-media /tmp/test_tts.wav)",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__create_directory",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(ollama list:*)",
      "Bash(cat:*)",
      "Bash(ollama show:*)",
      "Bash(npm run restart:*)",
      "Bash(./scripts/start-dev.sh:*)",
      "Bash(npm run start:*)",
      "Bash(node:*)",
      "Bash(grep:*)",
      "Bash(brew services:*)",
      "Bash(./tests/husky/run-all-tests.sh:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(git reset:*)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_allowed_directories",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__search_files",
      "Bash(git commit:*)",
      "Bash(find:*)",
      "Bash(mongosh:*)",
      "Bash(open http://localhost:3000/planning)",
      "WebSearch",
      "Bash(open http://localhost:3000/kanban)",
      "Bash(echo \"\nStarting pomodoro...\")",
      "WebFetch(domain:developer.spotify.com)",
      "Bash(git checkout:*)",
      "Bash(open:*)",
      "Bash(osascript:*)",
      "Bash(npm test:*)",
      "Bash(git log:*)",
      "Bash(../webapp/src/components/jarvis/ChatInterface.tsx )",
      "Bash(../webapp/src/components/jarvis/ChatView.tsx )",
      "Bash(../webapp/src/components/jarvis/FloatingWindowsManager.tsx )",
      "Bash(../webapp/src/components/jarvis/HeaderSection.tsx )",
      "Bash(../webapp/src/components/jarvis/VoiceInterface.tsx )",
      "Bash(../webapp/src/components/jarvis/WidgetContainer.tsx)",
      "Bash(../webapp/src/components/jarvis/FloatingWindow.tsx )",
      "Bash(../webapp/src/components/jarvis/JarvisMainContainer.tsx )",
      "Bash(../webapp/src/components/jarvis/PomodoroWidget.tsx )",
      "Bash(../webapp/src/components/jarvis/SettingsDialog.tsx)",
      "Bash(../webapp/src/hooks/useJarvisCore.ts )",
      "Bash(../webapp/src/hooks/useJarvisState.ts )",
      "Bash(../webapp/src/hooks/useMessageHandler.ts )",
      "Bash(../webapp/src/hooks/useMicrophoneGain.ts )",
      "Bash(../webapp/src/hooks/useSettings.ts )",
      "Bash(../webapp/src/hooks/useSpotifyIntegration.ts )",
      "Bash(../webapp/src/hooks/useVoiceState.ts )",
      "Bash(../webapp/src/hooks/useWindowManager.ts)",
      "Bash(../webapp/src/app/planning/PlanningClient.tsx )",
      "Bash(../webapp/src/app/planning/components/KanbanBoard.tsx)",
      "Bash(src/server/routes/spotify-routes.ts )",
      "Bash(../webapp/src/components/SpotifyPlayer.tsx)",
      "Bash(src/orchestrator/command-handler-new.ts )",
      "Bash(src/orchestrator/command-handler.ts )",
      "Bash(src/tts-manager.ts)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/anilozsoy/.local/pipx/venvs/edge-tts/bin"
    ]
  }
}